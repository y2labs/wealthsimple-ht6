type User {
  id: ID! @unique
  userId: ID! @unique
  personId: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  itemEventLoopedAt: DateTime
  petGrowthEventLoopedAt: DateTime
  primaryBankAccountId: String
  primaryBankAccountNumber: String
  primaryBankAccountName: String
  primaryAccountId: String
  accessTokenExpiresAt: DateTime!
  accessToken: String!
  refreshToken: String!
  phoneNumber: String
  email: String
  name: String
  achievements: [UserAchievement!]!
  lifetimeDollarsManagedEarned: Int! @default(value: "0")
  webPushSubscription: WebPushSubscription
  pet: Pet
}

type UserAchievement {
  id: ID! @unique
  achievement: Achievement!
  createdAt: DateTime!
}

type Achievement {
  id: ID! @unique
  name: String
}

type Pet {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  owner: User!
  name: String!
  color: String! @default(value: "#000")
  content: Int! @default(value: "1000")
  energy: Int! @default(value: "1000")
  hunger: Int! @default(value: "1000")
  size: Float! @default(value: "1")
  eventLoopedAt: DateTime!
  interactions: [PetInteraction!]!
}

enum PetInteractionType {
  NOOP
  PET
  BUY_ITEM
  USE_ITEM
}

type PetInteraction {
  id: ID! @unique
  createdAt: DateTime!
  type: PetInteractionType!
}

type Item {
  id: ID! @unique
  name: String!
  description: String
  singleUse: Boolean! @default(value: "false")
  effects: [ItemEffect!]!
  image: Image
}

type PurchasedItem {
  id: ID! @unique
  depositId: String!
  createdAt: DateTime!
  usedAt: DateTime
  item: Item!
  owner: User!
}

type PurchaseableItem {
  id: ID! @unique
  expiresAt: DateTime!
  purchasedAt: DateTime
  availableForUser: User!
  item: Item!
  price: Int!
}

enum ItemEffectType {
  ENERGY_INCREASE
  HUNGER_INCREASE
  CONTENT_INCREASE

  PASSIVE_EARN_MANAGED_DOLLARS
  NOOP
}

type ItemEffect {
  name: String!
  description: String

  type: ItemEffectType!
  value: Json!
}

type PassiveItemSync {
  id: ID! @unique
  createdAt: DateTime!
  deletedAt: DateTime
  item: PurchasedItem!
  nextSyncAt: DateTime!
  interval: Int!
}

type Image {
  id: ID! @unique
  uri: String
}

type WebPushSubscriptionKeys {
  p256dh: String!
  auth: String!
}

type WebPushSubscription {
  endpoint: String!
  keys: WebPushSubscriptionKeys!
}
